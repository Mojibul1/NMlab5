//b.Heunâ€™s algorithm

#include <iostream>
#include <cmath>
using namespace std;

double dy_dx(double x, double y) {
    return x + y;
}

double heun(double x0, double y0, double h, double target_x) {
    double x = x0;
    double y = y0;

    while (x < target_x) {
        double k1 = dy_dx(x, y);
        double k2 = dy_dx(x + h, y + h * k1);
        y += 0.5 * h * (k1 + k2);
        x += h;
    }

    return y;
}

int main() {
    double x0, y0, target_x, h;

    cout << "Enter the initial value of y (y0): ";
    cin >> y0;

    cout << "Enter the target value of x: ";
    cin >> target_x;

    cout << "Enter the step size (h): ";
    cin >> h;

    double x = 0; // Starting x value

    // Calculate y using Heun's method with the given inputs
    double y = heun(x, y0, h, target_x);

    cout << "Approximate value of y when x = " << target_x << " using Heun's method with h = " << h << ": " << y << endl;

    return 0;
}
